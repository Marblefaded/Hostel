<div class="alert alert-secondary mt-4">
    <span class="oi oi-pencil me-2" aria-hidden="true"></span>
    <strong>@Title</strong>
    @ChildContent
    <span class="text-nowrap">
        Please take our
        <a target="_blank" class="font-weight-bold link-dark" href="https://go.microsoft.com/fwlink/?linkid=2149017">brief survey</a>
    </span>
    and tell us what you think.
</div>
<input type="number" value="@Value" @oninput="OnValueChanged" />

@code {
    // Demonstrates how a parent component can supply parameters
    [Parameter]
    public string? Title { get; set; }
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    private int? value;

    [Parameter]
    public int? Value { get; set; }

    [Parameter]
    public EventCallback<int> ValueChanged { get; set; }

    private async Task OnValueChanged(ChangeEventArgs e)
    {
        value = Convert.ToInt32(e?.Value);

        await ValueChanged.InvokeAsync(value ?? 0);
    }
}
